{"ast":null,"code":"var _jsxFileName = \"/Users/hyeokjung.kim/Flatiron-LI/042020/48-combining-it-all/frontend/src/App.js\";\nimport React from 'react';\nimport FoodContainer from './Components/FoodContainer';\nimport Profile from './Components/Profile';\nimport FoodForm from './Components/FoodForm';\nimport './App.css';\nimport Form from './Form';\nimport { Switch, Route, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleLoginSubmit = userInfo => {\n      fetch(\"http://localhost:4000/login\", {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify(userInfo)\n      }).then(r => r.json()).then(this.handleResponse);\n    };\n\n    this.handleRegisterSubmit = userInfo => {\n      fetch(\"http://localhost:4000/users\", {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify(userInfo)\n      }).then(r => r.json()).then(this.handleResponse);\n    };\n\n    this.handleResponse = resp => {\n      if (resp.user) {\n        // SEND INFO ABOUT THE USER TO OUR GLOBAL STATE\n        this.props.setUserInfo(resp);\n        localStorage.token = resp.token;\n        this.props.history.push(\"/profile\");\n      }\n    };\n\n    this.renderForm = routerProps => {\n      if (routerProps.location.pathname === \"/login\") {\n        return /*#__PURE__*/React.createElement(Form, {\n          formName: \"Login Form\",\n          handleSubmit: this.handleLoginSubmit,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 14\n          }\n        });\n      } else if (routerProps.location.pathname === \"/register\") {\n        return /*#__PURE__*/React.createElement(Form, {\n          formName: \"Register Form\",\n          handleSubmit: this.handleRegisterSubmit,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 14\n          }\n        });\n      }\n    };\n\n    this.renderProfile = routerProps => {\n      if (this.props.loggedIn) {\n        return /*#__PURE__*/React.createElement(Profile, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 14\n          }\n        });\n      } else {\n        this.props.history.push(\"/login\");\n      }\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:4000/foods\").then(r => r.json()).then(foods => {\n      this.props.setAllFoods(foods);\n    });\n\n    if (localStorage.token) {\n      fetch(\"http://localhost:4000/users/stay_logged_in\", {\n        headers: {\n          \"Authorization\": localStorage.token\n        }\n      }).then(r => r.json()).then(this.handleResponse);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, \"Welcome to our Store\"), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/login\",\n      render: this.renderForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/register\",\n      render: this.renderForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/profile\",\n      render: this.renderProfile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(FoodContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }));\n  }\n\n} // ActionCreator - Return value of an action creator is an action\n// Action => POJO that contains the key of type && payload\n\n\nlet setAllFoods = foodsArr => {\n  return {\n    type: \"SET_ALL_FOODS\",\n    payload: foodsArr\n  };\n};\n\nlet setUserInfo = userInfo => {\n  return {\n    type: \"SET_USER_INFO\",\n    payload: userInfo\n  };\n}; // mapDispatchToProps is a POJO that will be merged as props to App\n\n\nlet mapDispatchToProps = {\n  setAllFoods: setAllFoods,\n  setUserInfo: setUserInfo\n};\n\nlet mapStateToProps = globalState => {\n  return {\n    loggedIn: !!globalState.userInformation.token\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(App)); // Because App doesn't need any information pulled from Global State, null is passed in as mapStateToProps\n// mapDispatchToProps will decide what action gets dispatched","map":{"version":3,"sources":["/Users/hyeokjung.kim/Flatiron-LI/042020/48-combining-it-all/frontend/src/App.js"],"names":["React","FoodContainer","Profile","FoodForm","Form","Switch","Route","withRouter","connect","App","Component","handleLoginSubmit","userInfo","fetch","method","headers","body","JSON","stringify","then","r","json","handleResponse","handleRegisterSubmit","resp","user","props","setUserInfo","localStorage","token","history","push","renderForm","routerProps","location","pathname","renderProfile","loggedIn","componentDidMount","foods","setAllFoods","render","foodsArr","type","payload","mapDispatchToProps","mapStateToProps","globalState","userInformation"],"mappings":"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","sourcesContent":["import React from 'react';\nimport FoodContainer from './Components/FoodContainer'\nimport Profile from './Components/Profile'\nimport FoodForm from './Components/FoodForm'\nimport './App.css';\nimport Form from './Form'\nimport {Switch, Route, withRouter} from 'react-router-dom'\nimport {connect} from 'react-redux'\n\nclass App extends React.Component {\n\n  componentDidMount(){\n    fetch(\"http://localhost:4000/foods\")\n    .then(r => r.json())\n    .then((foods) => {\n      this.props.setAllFoods(foods)\n    })\n\n    if(localStorage.token){\n      fetch(\"http://localhost:4000/users/stay_logged_in\",{\n        headers: {\n          \"Authorization\": localStorage.token\n        }\n      })\n      .then(r => r.json())\n      .then(this.handleResponse)\n\n    }\n  }\n\n\n  handleLoginSubmit = (userInfo) => {\n    fetch(\"http://localhost:4000/login\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify(userInfo)\n    })\n      .then(r => r.json())\n      .then(this.handleResponse)\n  }\n\n\n  handleRegisterSubmit = (userInfo) => {\n    fetch(\"http://localhost:4000/users\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify(userInfo)\n    })\n      .then(r => r.json())\n      .then(this.handleResponse)\n  }\n\n  handleResponse = (resp) => {\n    if(resp.user){\n      // SEND INFO ABOUT THE USER TO OUR GLOBAL STATE\n      this.props.setUserInfo(resp)\n      localStorage.token = resp.token\n      this.props.history.push(\"/profile\")\n    }\n  }\n\n  renderForm = (routerProps) => {\n    if(routerProps.location.pathname === \"/login\"){\n      return <Form\n        formName=\"Login Form\"\n        handleSubmit={this.handleLoginSubmit}\n      />\n    } else if (routerProps.location.pathname === \"/register\") {\n      return <Form\n        formName=\"Register Form\"\n        handleSubmit={this.handleRegisterSubmit}\n      />\n    }\n  }\n\n  renderProfile = (routerProps) => {\n    if(this.props.loggedIn){\n      return <Profile />\n    } else {\n      this.props.history.push(\"/login\")\n    }\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <h1>Welcome to our Store</h1>\n        <Switch>\n          <Route path=\"/login\" render={ this.renderForm } />\n          <Route path=\"/register\" render={ this.renderForm } />\n          <Route path=\"/profile\" render={this.renderProfile}/>\n        </Switch>\n        <FoodContainer />\n      </div>\n    );\n  }\n  \n}\n\n\n// ActionCreator - Return value of an action creator is an action\n// Action => POJO that contains the key of type && payload\nlet setAllFoods = (foodsArr) => {\n  return {\n    type: \"SET_ALL_FOODS\",\n    payload: foodsArr\n  }\n}\n\nlet setUserInfo = (userInfo) => {\n  return {\n    type: \"SET_USER_INFO\",\n    payload: userInfo\n  }\n}\n\n\n// mapDispatchToProps is a POJO that will be merged as props to App\nlet mapDispatchToProps = {\n  setAllFoods: setAllFoods,\n  setUserInfo: setUserInfo\n}\n\n\nlet mapStateToProps = (globalState) => {\n  return {\n    loggedIn: !!globalState.userInformation.token\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(App));\n// Because App doesn't need any information pulled from Global State, null is passed in as mapStateToProps\n// mapDispatchToProps will decide what action gets dispatched"]},"metadata":{},"sourceType":"module"}