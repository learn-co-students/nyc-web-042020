{"ast":null,"code":"var _jsxFileName = \"/Users/hyeokjung.kim/Flatiron-LI/042020/46-predux/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'; // REDUX STUFF BELOW\n\nimport { createStore } from 'redux';\nlet foodInitialState = {\n  foods: [],\n  number: 0\n}; // The return value of our reducer becomes our global state\n\nconst foodReducer = (state = foodInitialState, action) => {\n  switch (action.type) {\n    case \"ADD_NUMBER\":\n      return { ...state,\n        number: state.number + action.payload\n      };\n\n    case \"ADD_ARRAY\":\n      return { ...state\n      };\n\n    default:\n      return state;\n  }\n};\n\nlet theStoreObject = createStore(foodReducer);\nconsole.log(\"SET UP\", theStoreObject.getState());\nlet theActionToAdd1 = {\n  type: \"ADD_NUMBER\",\n  payload: 1\n};\ntheStoreObject.dispatch(theActionToAdd1);\ntheStoreObject.dispatch(theActionToAdd1);\ntheStoreObject.dispatch(theActionToAdd1);\ntheStoreObject.dispatch(theActionToAdd1);\ntheStoreObject.dispatch(theActionToAdd1);\ntheStoreObject.dispatch({\n  type: \"ADD_NUMBER\",\n  payload: 35\n});\ntheStoreObject.dispatch({\n  type: \"ADD_ARRAY\",\n  payload: {}\n});\nconsole.log(\"AFTER DISPATCH\", theStoreObject.getState());\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/hyeokjung.kim/Flatiron-LI/042020/46-predux/src/index.js"],"names":["React","ReactDOM","App","createStore","foodInitialState","foods","number","foodReducer","state","action","type","payload","theStoreObject","console","log","getState","theActionToAdd1","dispatch","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB,C,CAEA;;AACA,SAAQC,WAAR,QAA0B,OAA1B;AAEA,IAAIC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAE,EADc;AAErBC,EAAAA,MAAM,EAAE;AAFa,CAAvB,C,CAKA;;AACA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,gBAAT,EAA2BK,MAA3B,KAAsC;AAExD,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,YAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELF,QAAAA,MAAM,EAAEE,KAAK,CAACF,MAAN,GAAeG,MAAM,CAACE;AAFzB,OAAP;;AAIF,SAAK,WAAL;AACE,aAAO,EAAC,GAAGH;AAAJ,OAAP;;AACF;AACE,aAAOA,KAAP;AATJ;AAWD,CAbD;;AAgBA,IAAII,cAAc,GAAGT,WAAW,CAACI,WAAD,CAAhC;AACAM,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBF,cAAc,CAACG,QAAf,EAArB;AAEA,IAAIC,eAAe,GAAG;AACpBN,EAAAA,IAAI,EAAE,YADc;AAEpBC,EAAAA,OAAO,EAAE;AAFW,CAAtB;AAKAC,cAAc,CAACK,QAAf,CAAwBD,eAAxB;AACAJ,cAAc,CAACK,QAAf,CAAwBD,eAAxB;AACAJ,cAAc,CAACK,QAAf,CAAwBD,eAAxB;AACAJ,cAAc,CAACK,QAAf,CAAwBD,eAAxB;AACAJ,cAAc,CAACK,QAAf,CAAwBD,eAAxB;AACAJ,cAAc,CAACK,QAAf,CAAwB;AACtBP,EAAAA,IAAI,EAAE,YADgB;AAEtBC,EAAAA,OAAO,EAAE;AAFa,CAAxB;AAKAC,cAAc,CAACK,QAAf,CAAwB;AACtBP,EAAAA,IAAI,EAAE,WADgB;AAEtBC,EAAAA,OAAO,EAAE;AAFa,CAAxB;AAOAE,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,cAAc,CAACG,QAAf,EAA9B;AAoBAd,QAAQ,CAACiB,MAAT,eACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n// REDUX STUFF BELOW\nimport {createStore} from 'redux'\n\nlet foodInitialState = {\n  foods: [],\n  number: 0\n}\n\n// The return value of our reducer becomes our global state\nconst foodReducer = (state = foodInitialState, action) => {\n\n  switch(action.type){\n    case \"ADD_NUMBER\":\n      return {\n        ...state, \n        number: state.number + action.payload\n      }\n    case \"ADD_ARRAY\":\n      return {...state}\n    default: \n      return state\n  }\n}\n\n\nlet theStoreObject = createStore(foodReducer)\nconsole.log(\"SET UP\",theStoreObject.getState())\n\nlet theActionToAdd1 = {\n  type: \"ADD_NUMBER\",\n  payload: 1\n}\n\ntheStoreObject.dispatch(theActionToAdd1)\ntheStoreObject.dispatch(theActionToAdd1)\ntheStoreObject.dispatch(theActionToAdd1)\ntheStoreObject.dispatch(theActionToAdd1)\ntheStoreObject.dispatch(theActionToAdd1)\ntheStoreObject.dispatch({\n  type: \"ADD_NUMBER\",\n  payload: 35\n})\n\ntheStoreObject.dispatch({\n  type: \"ADD_ARRAY\",\n  payload: {\n    \n  }\n})\n\nconsole.log(\"AFTER DISPATCH\", theStoreObject.getState())\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n"]},"metadata":{},"sourceType":"module"}